plugins {
    id('java-library')
    id('java-test-fixtures')
}

dependencies {

    implementation project(':java-utilities')
    implementation project(':event-coi')
    implementation project(':frameworks-configuration-commonobjects')

    // Utility (dependency is api as apache commons classes are publicly exposed).
    api libs.org.apache.commons.commons.lang3
    // Google AutoValue
    api libs.com.google.guava.guava
    implementation libs.com.google.auto.value.auto.value.annotations
    annotationProcessor libs.com.google.auto.value.auto.value.base

    // Serialization (dependencies are api as we expose our ObjectMapper as a singleton).
    api libs.com.fasterxml.jackson.core.jackson.databind
    api libs.com.fasterxml.jackson.datatype.jackson.datatype.jdk8
    api libs.com.fasterxml.jackson.datatype.jackson.datatype.jsr310
    api libs.com.fasterxml.jackson.datatype.jackson.datatype.guava
    api libs.org.apache.kafka.kafka.clients

    // msgpack and YAML serialization; kept as private so clients don't have to know about it
    implementation libs.org.msgpack.jackson.dataformat.msgpack
    implementation libs.com.fasterxml.jackson.dataformat.jackson.dataformat.yaml

    // Testing.
    testFixturesApi(platform(libs.org.springframework.boot.spring.boot.dependencies))
    testImplementation project(':test-utils')
    testImplementation(testFixtures(project(':station-definition-coi')))
    testImplementation(testFixtures(project(':event-coi')))
    testImplementation(testFixtures(project(':signal-detection-coi')))

    testFixturesImplementation(testFixtures(project(':event-coi')))
    testFixturesImplementation(testFixtures(project(':signal-detection-coi')))
    testFixturesImplementation(testFixtures(project(':station-definition-coi')))
}
