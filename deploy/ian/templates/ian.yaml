{{/* Main template for ian */}}

{{- include "gms.common.configMap.standard" $ }}
{{- include "gms.common.limitrange" $ }}
{{- include "gms.common.sidecar" $ }}
{{- include "gms.common.secrets.copy" $ }}
{{- include "gms.common.configMaps.copy" $ }}
{{- include "gms.common.secret.oracleWallet" $ }}

{{- range $index, $appName := .Values.standardApps }}
{{- $appContext := mustMergeOverwrite (mustDeepCopy $) (dict "appValues" (get $.Values $appName)) (dict "appName" $appName) }}
{{- include "gms.common.app.standard" $appContext }}
{{- end }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gms
  labels:
    {{- include "gms.common.labels.standard" . | trim | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gms
  labels:
    {{- include "gms.common.labels.standard" . | trim | nindent 4 }}
rules:
{{- if semverCompare "<1.25-0" (include "gms.common.capabilities.kubeVersion" .) }}
- apiGroups:
  - extensions
  resourceNames:
  - default-psp
  resources:
  - podsecuritypolicies
  verbs:
    - use
{{- end }}
- apiGroups:
    - ""
  resources:
    - pods
    - endpoints
  verbs:
    - get
    - list
    - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gms
  labels:
    {{- include "gms.common.labels.standard" . | trim | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gms
subjects:
- kind: ServiceAccount
  name: gms
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  labels:
    {{- include "gms.common.labels.standard" . | trim | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus
  labels:
    {{- include "gms.common.labels.standard" . | trim | nindent 4 }}
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus
  labels:
    {{- include "gms.common.labels.standard" . | trim | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "default-redirect"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: 'https://$host:{{ .Values.global.basePort }}/interactive-analysis-ui/'
  labels:
    {{- include "gms.common.labels.standard" . | trim | nindent 4 }}
spec:
  ingressClassName: nginx
  rules:
    - host: "{{ .Release.Name }}.{{ .Values.global.baseDomain }}"
      http:
        paths:
          - backend:
              service:
                name: "interactive-analysis-ui"
                port:
                  number: 8080
            path: "/$"
            pathType: "Prefix"
  tls:
    - hosts:
        - "{{ .Release.Name }}.{{ .Values.global.baseDomain }}"
      secretName: ingress-default-cert

{{- if .Values.global.istio }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: "default-redirect"
  labels:
    {{- include "gms.common.labels.standard" . | trim | nindent 4 }}
spec:
  exportTo:
    - "."
    - "istio-system"
  gateways:
    - "istio-system/ingress-default-gateway"
  hosts:
    - "{{ .Release.Name }}.{{ .Values.global.baseDomain }}"
  http:
    - match:
        - uri:
            exact: "/"
      redirect:
        uri: "/interactive-analysis-ui/"
{{- end }}