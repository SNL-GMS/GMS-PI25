// Variable declarations
$associated-color: var(--analyst-open-event);
$associated-color-dark: var(--analyst-open-event-dark);
$undo-background: var(--gms-prominent-background, $gms-prominent-background);
$undo-background-dark: var(--gms-prominent-background-dark, #000);
$undo-color: var(--gms-main, $gms-main);
$redo-background: var(--gms-recessed, $gms-recessed);
$redo-color: var(--gms-main, $gms-main);
$unassociated-color: $analyst-unassociated;
$rejected-color: var(--rejected-event-color, $rejected-event-color);
$rejected-color-dark: var(--rejected-event-color-dark);
$deleted-color: var(--deleted-event-color, $deleted-event-color);
$deleted-color-dark: var(--deleted-event-color-dark);
$completed-color: $analyst-complete;
$indicator-color: var(--gms-soft, $gms-soft);
$indicator-line-style: 1px solid $indicator-color;
$label-column-ch: 17ch;

/// Generates the styles to highlight history entries when they will be affected by
/// an undo/redo action.
/// @param $used-foreground-color the foreground color that is currently applied to the entry
/// @param $used-background-color the background color that is currently applied to the entry
@mixin generateAffectedStyles($used-foreground-color, $used-background-color) {
  &.is-affected {
    color: $used-foreground-color;
    border: 1px solid $used-foreground-color;
    &:hover {
      color: $used-background-color;
      background-color: $used-foreground-color;
    }
  }
}

/// Generates the styles to highlight unassociated history entries (no associated event)
/// @param $used-background-color the background color that is currently applied to the entry
@mixin generateUnAssociatedStyles($used-background-color) {
  &.is-unassociated {
    color: $unassociated-color;
    &.is-affected {
      border: 1px solid $unassociated-color;
      &:hover {
        color: $used-background-color;
        background-color: $unassociated-color;
      }
    }
  }
}

.history-display-window {
  @include flexColumn;
  width: 100%;
  height: 100%;
  .toolbar {
    margin-bottom: 0.5em;
  }
}

/// History panel component
.history-panel {
  display: flex;
  justify-content: flex-end;
  flex-direction: column;
  height: inherit;
  font-size: 1rem; //14 / 16 * 1rem;
  .toolbar-item:last-of-type {
    padding-right: 0;
  }
}

/// Modifying .list from base.scss to create specific styles for history lists
.list--history {
  height: 100%;
  overflow-y: scroll;
  background-color: var(--gms-background, $gms-background);
  margin-left: 0.5em;
  width: 100%;
  align-self: flex-end;
  @include hasSpaceBetweenChildren(2px, 0, 0, 0);
  .list__row {
    transition: all ease-in-out 50ms;
    margin-right: 0.5em;
    &.entry-row {
      display: grid;
      grid-template-columns: 3.5ch 1fr;
      border-bottom: 1px solid var(--gms-background, $gms-background);
      border-top: 1px solid var(--gms-background, $gms-background);
      &.action-indicator-bottom {
        border-bottom: $indicator-line-style;
      }
      &.action-indicator-top {
        border-top: $indicator-line-style;
      }
      &:last-child {
        margin-bottom: 1em;
      }
    }
  }
  .list__icon--empty {
    opacity: 0.5;
  }
  .list__column--meta-container {
    display: flex;
    flex-direction: column;
    height: 100%;
    justify-content: flex-end;
    align-items: flex-start;
    color: $indicator-color;
    font-size: 10px;
    &.bottom {
      justify-content: flex-start;
    }
    &.move-up {
      margin-top: -2px;
    }
    &.mixed {
      flex-wrap: wrap;
      justify-content: space-between;
    }
  }
  .bp4-non-ideal-state {
    height: inherit;
    background-color: var(--gms-background, $gms-background);
    pointer-events: none;
    padding: 1em;
  }
}

.history-row--multi {
  display: grid;
  grid-template:
    'entry'
    'childContainer'
    'toggleButton' 1em / 1fr;
  column-gap: 2px;
  background-color: var(--gms-recessed, $gms-recessed);
  .toggle-button {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--gms-recessed, $gms-recessed);
    height: 100%;
    &:hover {
      @include castLightOn();
      cursor: pointer;
    }
    &--undo:hover {
      background-color: var(--gms-table-selection, $gms-table-selection);
    }
    .bp4-icon {
      transition: transform 50ms ease-in-out;
    }
    .is-inverted {
      transform: rotateZ(180deg);
    }
  }
  &__child-container {
    display: grid;
    height: 0;
    transition: height 50ms ease-in-out;
    &.is-expanded {
      height: auto;
    }
  }
}

/// History-entry element in the list
.history-entry {
  position: relative;
  display: grid;
  font-family: $gms-mono;
  grid-template: 'label description' auto / $label-column-ch 1fr;
  grid-auto-columns: repeat(1em);
  grid-auto-flow: column;
  column-gap: 0.5em;
  width: 100%;
  padding: 0.33em 1em;
  border: 1px solid transparent;
  transition: all ease-in-out 50ms;
  &.is-included {
    cursor: pointer;
    &:hover {
      &:not(.is-child) {
        @include castLightOn();
      }
    }
  }
  &__label {
    grid-area: label;
    pointer-events: none;
    &--strong {
      font-weight: 600;
    }
    .is-child & {
      padding-left: 1ch;
    }
  }
  &__description {
    grid-area: description;
    pointer-events: none;
    &--strong {
      font-weight: 600;
    }
  }
  &__icon {
    align-self: center;
    color: var(--gms-main, $gms-main);
  }
  &--undo {
    color: $undo-color;
    background-color: $undo-background;
    opacity: 1;
    @include generateAffectedStyles($undo-color, $undo-background);
    @include generateUnAssociatedStyles($undo-background);
  }
  &--redo {
    color: $redo-color;
    background-color: $redo-background;
    opacity: 0.5;
    @include generateAffectedStyles($redo-color, $redo-background);
    &.is-affected {
      opacity: 0.75;
      &:hover {
        opacity: 0.75;
      }
    }
    @include generateUnAssociatedStyles($redo-background);
  }
  &--hidden {
    pointer-events: none;
    visibility: hidden;
  }
  &.is-associated {
    color: $associated-color;
    &.is-affected {
      border: 1px solid $associated-color;
      &:hover {
        color: var(--gms-main-inverted, $gms-main-inverted);
        background-color: $associated-color;
      }
    }
  }
  &.is-deletion {
    color: $deleted-color;
    &.is-affected {
      border: 1px solid $deleted-color;
      &:hover {
        color: var(--gms-main-inverted, $gms-main-inverted);
        background-color: $deleted-color;
      }
    }
    &.is-event-mode.is-affected {
      border: 1px solid $deleted-color;
      &:hover {
        @include diagonalStripedBackground(
          $deleted-color,
          $deleted-color-dark,
          $diagonal-texture-distance
        );
      }
    }
  }
  &.is-rejection {
    color: $rejected-color;
    &.is-affected {
      border: 1px solid $rejected-color;
      &:hover {
        color: var(--gms-main-inverted, $gms-main-inverted);
        background-color: $rejected-color;
      }
    }
    &.is-event-mode.is-affected {
      border: 1px solid $rejected-color;
      &:hover {
        @include diagonalStripedBackground(
          $rejected-color,
          $rejected-color-dark,
          $diagonal-texture-distance
        );
      }
    }
  }
  &.is-child {
    &:hover {
      cursor: default;
    }
    background-color: var(--gms-recessed, $gms-recessed);
    &.is-event-mode.is-affected {
      @include diagonalStripedBackground(
        var(--gms-recessed, $gms-recessed),
        $undo-background-dark,
        $diagonal-texture-distance
      );
    }
  }
  &.is-event-mode.is-affected {
    @include diagonalStripedBackground(
      $undo-background,
      $undo-background-dark,
      $diagonal-texture-distance
    );
    &:hover {
      @include diagonalStripedBackground(
        $associated-color,
        $associated-color-dark,
        $diagonal-texture-distance
      );
    }
  }
  &.is-completed {
    color: $completed-color;
    &.is-affected {
      border-color: $completed-color;
      &:hover {
        background: $completed-color;
      }
    }
  }
  &:not(.is-child):hover {
    .history-entry__icon {
      color: var(--gms-main-inverted, $gms-main-inverted);
    }
  }
  &__icon--associated {
    color: $associated-color;
  }
  .is-event-mode &:not(.is-included) {
    color: var(--gms-soft, $gms-soft);
  }
}

.decoration-row {
  display: flex;
  color: $indicator-color;
  &__label {
    padding-left: calc(1em + 1px);
  }
  &__indicator {
    height: 1px;
    width: 100%;
    margin: 10px 0 0 1em;
    border-top: $indicator-line-style;
  }
}
